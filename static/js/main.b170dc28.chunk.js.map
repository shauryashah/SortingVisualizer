{"version":3,"sources":["SortingAlgorithms/doMergeSort.js","SortingAlgorithms/doBubbleSort.js","SortingAlgorithms/doQuickSort.js","SortingAlgorithms/doInsertionSort.js","SortingAlgorithms/doSelectionSort.js","SortingVisualizer/SortingVisualizer.js","App.js","serviceWorker.js","index.js"],"names":["doMergeSort","array","animations","length","copyarray","slice","mergeSortUtil","start","end","mid","Math","floor","k","i","j","push","merge","doBubbleSort","n","bubbleSortUtil","doQuickSort","quickSortUtil","low","high","pi","pivot","partition","doInsertionSort","key","insertionSortUtil","doSelectionSort","min_idx","temp","selectionSortUtil","SortingVisualizer","props","algorithm","state","this","generateArray","generateRandom","setState","min","max","random","bar","document","getElementsByClassName","first","second","firstStyle","style","secondStyle","color","setTimeout","backgroundColor","console","log","idx","newValue","height","change","barIdx","swap","c","mergeSort","quickSort","bubbleSort","insertionSort","selectionSort","dispArray","map","value","className","onClick","handleClick","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b170dc28.chunk.js","sourcesContent":["function doMergeSort(array) {\r\n  const animations = [];\r\n  if (array.length <= 1) return array;\r\n  const copyarray = array.slice();\r\n  mergeSortUtil(array, 0, array.length - 1, copyarray, animations);\r\n  return animations;\r\n}\r\nfunction mergeSortUtil(array, start, end, copyarray, animations) {\r\n  if (start === end) return;\r\n  let mid = Math.floor((start + end) / 2);\r\n  mergeSortUtil(copyarray, start, mid, array, animations);\r\n  mergeSortUtil(copyarray, mid + 1, end, array, animations);\r\n  merge(array, start, mid, end, copyarray, animations);\r\n}\r\n\r\nfunction merge(array, start, mid, end, copyarray, animations) {\r\n  let k = start;\r\n  let i = start;\r\n  let j = mid + 1;\r\n  while (i <= mid && j <= end) {\r\n    animations.push([i, j]);\r\n    animations.push([i, j]);\r\n    if (copyarray[i] <= copyarray[j]) {\r\n      animations.push([k, copyarray[i]]);\r\n      array[k++] = copyarray[i++];\r\n    } else {\r\n      animations.push([k, copyarray[j]]);\r\n      array[k++] = copyarray[j++];\r\n    }\r\n  }\r\n\r\n  while (i <= mid) {\r\n    animations.push([i, i]);\r\n    animations.push([i, i]);\r\n    animations.push([k, copyarray[i]]);\r\n    array[k++] = copyarray[i++];\r\n  }\r\n  while (j <= end) {\r\n    animations.push([j, j]);\r\n    animations.push([j, j]);\r\n    animations.push([k, copyarray[j]]);\r\n    array[k++] = copyarray[j++];\r\n  }\r\n}\r\n\r\nexport default doMergeSort;\r\n","function doBubbleSort(array) {\r\n  const animations = [];\r\n  bubbleSortUtil(array, array.length, animations);\r\n  return animations;\r\n}\r\nfunction bubbleSortUtil(array, n, animations) {\r\n  for (let i = 0; i < n - 1; i++) {\r\n    for (let j = 0; j < n - i - 1; j++)\r\n      if (array[j] > array[j + 1]) {\r\n        [array[j], array[j + 1]] = [array[j + 1], array[j]];\r\n        animations.push([j, j + 1, true]);\r\n        animations.push([j, j + 1, true]);\r\n      } else {\r\n        animations.push([j, j + 1, false]);\r\n        animations.push([j, j + 1, false]);\r\n      }\r\n  }\r\n}\r\nexport default doBubbleSort;\r\n","function doQuickSort(array) {\r\n  let animations = [];\r\n  quickSortUtil(array, 0, array.length - 1, animations);\r\n  return animations;\r\n}\r\n\r\nfunction quickSortUtil(array, low, high, animations) {\r\n  let pi;\r\n  if (low < high) {\r\n    pi = partition(array, low, high, animations);\r\n    quickSortUtil(array, low, pi - 1, animations);\r\n    quickSortUtil(array, pi + 1, high, animations);\r\n  }\r\n}\r\n\r\nfunction partition(array, low, high, animations) {\r\n  let pivot = array[high];\r\n  let i = low - 1;\r\n  for (let j = low; j <= high - 1; j++) {\r\n    animations.push([j, high]);\r\n    animations.push([j, high]);\r\n    if (array[j] <= pivot) {\r\n      i++;\r\n      [array[i], array[j]] = [array[j], array[i]];\r\n      animations.push([j, array[j]]);\r\n      animations.push([i, array[i]]);\r\n    } else {\r\n      animations.push([-1, -1]);\r\n      animations.push([-1, -1]);\r\n    }\r\n  }\r\n  [array[i + 1], array[high]] = [array[high], array[i + 1]];\r\n  animations.push([-1, -1]);\r\n  animations.push([-1, -1]);\r\n  animations.push([i + 1, array[i + 1]]);\r\n  animations.push([high, array[high]]);\r\n  return i + 1;\r\n}\r\nexport default doQuickSort;\r\n","function doInsertionSort(array) {\r\n  let animations = [];\r\n  insertionSortUtil(array, animations);\r\n  return animations;\r\n}\r\n\r\nfunction insertionSortUtil(array, animations) {\r\n  let n = array.length;\r\n  for (let i = 1; i < n; i++) {\r\n    let key = array[i];\r\n    let j = i - 1;\r\n    animations.push([j, i]);\r\n    animations.push([j, i]);\r\n    while (j >= 0 && array[j] > key) {\r\n      animations.push([j, i]);\r\n      animations.push([j, i]);\r\n      animations.push([j + 1, array[j], true]);\r\n      array[j + 1] = array[j];\r\n      j -= 1;\r\n    }\r\n    animations.push([j + 1, key, true]);\r\n    array[j + 1] = key;\r\n  }\r\n}\r\nexport default doInsertionSort;\r\n","function doSelectionSort(array){\r\n    let animations = []\r\n    selectionSortUtil(array,animations)\r\n    return animations\r\n}\r\n\r\nfunction selectionSortUtil(array,animations){\r\n    const n = array.length\r\n    for(let i = 0; i < n; i++){\r\n        let min_idx = i\r\n        for(let j = i+1; j < n; j++){\r\n            animations.push([j,min_idx])\r\n            animations.push([j,min_idx])\r\n            if(array[j] < array[min_idx])\r\n                min_idx = j\r\n        }\r\n        animations.push([min_idx,array[i],true])\r\n        animations.push([i,array[min_idx],true])\r\n       let temp = array[min_idx]\r\n       array[min_idx] = array[i]\r\n       array[i] = temp\r\n    }\r\n}\r\n\r\nexport default doSelectionSort","import React, { Component } from \"react\";\r\nimport \"./SortingVisualizer.css\";\r\nimport \"../SortingAlgorithms/doMergeSort\";\r\nimport doMergeSort from \"../SortingAlgorithms/doMergeSort\";\r\nimport doBubbleSort from \"../SortingAlgorithms/doBubbleSort\";\r\nimport doQuickSort from \"../SortingAlgorithms/doQuickSort\";\r\nimport doInsertionSort from \"../SortingAlgorithms/doInsertionSort\";\r\nimport doSelectionSort from \"../SortingAlgorithms/doSelectionSort\";\r\nconst primary = \"turquoise\";\r\nconst secondary = \"red\";\r\nclass SortingVisualizer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.algorithm = null;\r\n    this.state = {\r\n      array: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.generateArray();\r\n  }\r\n  generateArray() {\r\n    const array = [];\r\n    for (let i = 0; i < 350; i++) array.push(this.generateRandom(10, 600));\r\n    this.setState({ array });\r\n  }\r\n\r\n  generateRandom(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  }\r\n  mergeSort() {\r\n    const animations = doMergeSort(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      let bar = document.getElementsByClassName(\"bar\");\r\n      const change = i % 3 !== 2;\r\n      if (change) {\r\n        const [first, second] = animations[i];\r\n        const firstStyle = bar[first].style;\r\n        const secondStyle = bar[second].style;\r\n        const color = i % 3 === 0 ? secondary : primary;\r\n\r\n        setTimeout(() => {\r\n          firstStyle.backgroundColor = color;\r\n          secondStyle.backgroundColor = color;\r\n        }, i * 2);\r\n      } else {\r\n        setTimeout(() => {\r\n          console.log(2);\r\n          const [idx, newValue] = animations[i];\r\n          let barIdx = bar[idx].style;\r\n          barIdx.height = `${newValue}px`;\r\n        }, i * 2);\r\n      }\r\n    }\r\n  }\r\n  quickSort() {\r\n    const animations = doQuickSort(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const change = i % 4 === 0 || i % 4 === 1 ? true : false;\r\n      let bar = document.getElementsByClassName(\"bar\");\r\n      if (change) {\r\n        const color = i % 4 === 0 ? secondary : primary;\r\n        const [first, second] = animations[i];\r\n        if (first === -1) continue;\r\n        const firstStyle = bar[first].style;\r\n        const secondStyle = bar[second].style;\r\n        setTimeout(() => {\r\n          firstStyle.backgroundColor = color;\r\n          secondStyle.backgroundColor = color;\r\n        }, i * 2);\r\n      } else {\r\n        const [idx, newValue] = animations[i];\r\n        if (idx === -1) continue;\r\n        const barIdx = bar[idx].style;\r\n        setTimeout(() => {\r\n          barIdx.height = `${newValue}px`;\r\n        }, i * 2);\r\n      }\r\n    }\r\n  }\r\n  bubbleSort() {\r\n    const animations = doBubbleSort(this.state.array);\r\n    for (let i = 0; i < animations.length; i++) {\r\n      let bar = document.getElementsByClassName(\"bar\");\r\n      const [first, second, swap] = animations[i];\r\n      const firstStyle = bar[first].style;\r\n      const secondStyle = bar[second].style;\r\n      const color = i % 2 === 0 ? secondary : primary;\r\n      setTimeout(() => {\r\n        firstStyle.backgroundColor = color;\r\n        secondStyle.backgroundColor = color;\r\n      }, i * 2);\r\n      if (i % 2 === 0 && swap) {\r\n        setTimeout(() => {\r\n          [firstStyle.height, secondStyle.height] = [\r\n            secondStyle.height,\r\n            firstStyle.height,\r\n          ];\r\n        }, i * 2);\r\n      }\r\n    }\r\n  }\r\n  insertionSort() {\r\n    const animations = doInsertionSort(this.state.array);\r\n    let c = 0;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      let bar = document.getElementsByClassName(\"bar\");\r\n      if (animations[i].length === 2) {\r\n        c += 1;\r\n        const [first, second] = animations[i];\r\n        const firstStyle = bar[first].style;\r\n        const secondStyle = bar[second].style;\r\n        const color = c % 2 !== 0 ? secondary : primary;\r\n        setTimeout(() => {\r\n          firstStyle.backgroundColor = color;\r\n          secondStyle.backgroundColor = color;\r\n        }, i * 2);\r\n      } else {\r\n        const [idx, newValue, swap] = animations[i];\r\n        const barIdx = bar[idx].style;\r\n        setTimeout(() => {\r\n          barIdx.height = `${newValue}px`;\r\n        }, i * 2);\r\n      }\r\n    }\r\n  }\r\n  selectionSort() {\r\n    const animations = doSelectionSort(this.state.array);\r\n    let c = 0;\r\n    for (let i = 0; i < animations.length; i++) {\r\n      let bar = document.getElementsByClassName(\"bar\");\r\n      if (animations[i].length === 2) {\r\n        c += 1;\r\n        const [first, second] = animations[i];\r\n        const firstStyle = bar[first].style;\r\n        const secondStyle = bar[second].style;\r\n        const color = c % 2 !== 0 ? secondary : primary;\r\n        setTimeout(() => {\r\n          firstStyle.backgroundColor = color;\r\n          secondStyle.backgroundColor = color;\r\n        }, i * 0.8);\r\n      } else {\r\n        const [idx, newValue, swap] = animations[i];\r\n        const barIdx = bar[idx].style;\r\n        setTimeout(() => {\r\n          barIdx.height = `${newValue}px`;\r\n        }, i * 0.8);\r\n      }\r\n    }\r\n  }\r\n  handleClick() {\r\n    if (this.algorithm === \"mergesort\") this.mergeSort();\r\n    else if (this.algorithm === \"quicksort\") this.quickSort();\r\n    else if (this.algorithm === \"bubblesort\") this.bubbleSort();\r\n    else if (this.algorithm === \"insertionsort\") this.insertionSort();\r\n    else if (this.algorithm === \"selectionsort\") this.selectionSort();\r\n  }\r\n  render() {\r\n    const { array } = this.state;\r\n    const dispArray = array.map((value, idx) => {\r\n      return (\r\n        <div\r\n          className=\"bar\"\r\n          key={idx}\r\n          style={{\r\n            backgroundColor: \"turquoise\",\r\n            height: `${value}px`,\r\n          }}\r\n        ></div>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"Main\">\r\n        <div className=\"toolbar\">\r\n          <div onClick={() => this.generateArray()} className=\"generate\">\r\n            Generate Array\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div\r\n            onClick={() => (this.algorithm = \"mergesort\")}\r\n            className=\"algorithm\"\r\n          >\r\n            Merge Sort\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div\r\n            onClick={() => (this.algorithm = \"quicksort\")}\r\n            className=\"algorithm\"\r\n          >\r\n            QuickSort\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div\r\n            onClick={() => (this.algorithm = \"bubblesort\")}\r\n            className=\"algorithm\"\r\n          >\r\n            Bubble Sort\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div\r\n            onClick={() => (this.algorithm = \"insertionsort\")}\r\n            className=\"algorithm\"\r\n          >\r\n            Insertion Sort\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div\r\n            onClick={() => (this.algorithm = \"selectionsort\")}\r\n            className=\"algorithm\"\r\n          >\r\n            Selection Sort\r\n          </div>\r\n          <div className=\"separator\"></div>\r\n          <div className=\"sort\" onClick={() => this.handleClick()}>\r\n            Sort\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">{dispArray}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortingVisualizer;\r\n","import React from 'react';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n      <SortingVisualizer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}